{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs\"","webpack:///./node_modules/debug/src/debug.js","webpack:///external \"path\"","webpack:///./node_modules/bindings sync","webpack:///./src/timerFunction/index.js","webpack:///./node_modules/time/index.js","webpack:///./node_modules/debug/src/index.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/debug/src/node.js","webpack:///external \"tty\"","webpack:///external \"util\"","webpack:///external \"net\"","webpack:///./node_modules/bindings/bindings.js","webpack:///external \"vm\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","prevTime","createDebug","namespace","debug","enabled","self","curr","Date","ms","diff","prev","args","Array","arguments","length","coerce","unshift","index","replace","match","format","formatter","formatters","val","splice","formatArgs","log","console","apply","useColors","color","hash","charCodeAt","colors","Math","abs","selectColor","init","Error","stack","message","disable","enable","namespaces","save","names","skips","split","len","push","RegExp","substr","test","humanize","webpackEmptyContext","req","e","code","keys","resolve","id","time","handler","event","context","callback","currentTime","setTimezone","statusCode","body","toString","fs","path","bindings","MILLIS_PER_SECOND","DAYS_OF_WEEK","MONTHS","TZ_BLACKLIST","getTimezone","getTimezoneAbbr","currentTimezone","process","env","TZ","localtime","mktime","_Date","NODE_MODULE_CONTEXTS","runInNewContext","possibleTzdirs","TZDIR","shift","statSync","isDirectory","currentTimezonePath","readlinkSync","substring","zone","readFileSync","trim","timezone","relative","h","mo","y","this","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","oldTz","tz","_currentZoneinfo","tzset","zoneInfo","getTime","reset","isDaylightSavings","setTime","dayOfMonth","getDay","dayOfWeek","getYear","year","hours","minutes","month","seconds","getTimezoneOffset","gmtOffset","tzname","setAllDateFields","setFullYear","setDate","setHours","setMilliseconds","setMinutes","setMonth","setSeconds","v","rtn","setUTCDate","setUTCFullYear","setUTCHours","setUTCMilliseconds","setUTCMinutes","setUTCMonth","setUTCSeconds","toDateString","pad","toTimeString","offset","floor","toLocaleTimeString","toLocaleDateString","toLocaleString","str","day","hour","minute","second","millisecond","argc","parse","dateStr","num","padLen","String","usedTz","err","listTimezones","cb","subset","listTimezonesFolder","prefix","folder","timezones","readdir","files","pending_stats","indexOf","toUpperCase","stat","join","file","stats","tzs","concat","sort","now","writable","UTC","extend","date","type","load","storage","DEBUG","Function","lastC","removeItem","window","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","$1","chrome","local","localStorage","localstorage","j","JSON","stringify","plural","ceil","options","exec","parseFloat","isNaN","long","fmtLong","round","fmtShort","tty","util","inspectOpts","stream","write","toUTCString","Boolean","isatty","fd","filter","reduce","obj","prop","_","k","Number","DEBUG_FD","deprecate","stdout","stderr","binding","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","net","Socket","readable","read","_isStdio","createWritableStdioStream","inspect","map","O","dirname","exists","accessSync","existsSync","defaults","arrow","NODE_BINDINGS_ARROW","compiled","NODE_BINDINGS_COMPILED_DIR","platform","arch","version","versions","node","try","opts","module_root","getRoot","getFileName","extname","b","tries","a","calling_file","fileName","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","st","__filename","captureStackTrace","dir","cwd"],"mappings":"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","file":"./src/timerFunction/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"fs\");","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","module.exports = require(\"path\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 3;","var time = require('time');\n//testing my \nexports.handler = (event, context, callback) => {\n    var currentTime = new time.Date(); \n    currentTime.setTimezone(\"America/Los_Angeles\");\n    callback(null, {\n        statusCode: '200',\n        body: 'The time in Los Angeles is: ' + currentTime.toString(),\n    });\n};","/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('time')\n  , fs = require('fs')\n  , path = require('path')\n  , bindings = require('bindings')('time.node')\n  , MILLIS_PER_SECOND = 1000\n  , DAYS_OF_WEEK = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n  , MONTHS = ['January','February','March','April','May','June','July','August','September','October','November','December']\n  , TZ_BLACKLIST = [ 'SystemV', 'Etc' ];\n\n/**\n * Extends a \"Date\" constructor with node-time's extensions.\n * By default, `time.Date` is extended with this function.\n * If you want the global your your module-specific Date to be extended,\n * then invoke this function on the Date constructor.\n */\n\nexports = module.exports = function (Date) {\n  debug('extending Date constructor');\n  var p = Date.prototype;\n  p.getTimezone = getTimezone;\n  p.setTimezone = setTimezone;\n  p.getTimezoneAbbr = getTimezoneAbbr;\n  return exports;\n}\n\n/**\n * The initial timezone of the process. This env var may initially be undefined,\n * in which case node-time will attempt to resolve and set the variable.\n */\n\nexports.currentTimezone = process.env.TZ;\n\n/**\n * Export the raw functions from the bindings.\n */\n\nexports.time = bindings.time;\nexports.localtime = bindings.localtime;\nexports.mktime = bindings.mktime;\n\n/**\n * A \"hack\" of sorts to force getting our own Date instance.\n * Otherwise, in normal cases, the global Natives are shared between\n * contexts (not what we want)...\n */\n\nvar _Date = process.env.NODE_MODULE_CONTEXTS\n  ? Date\n  : require('vm').runInNewContext(\"Date\");\n\n/**\n * Add the node-time extensions (setTimezone(), etc.)\n */\n\nexports(_Date);\n\n/**\n * During startup, we synchronously attempt to determine the location of the\n * timezone dir, or TZDIR on some systems. This isn't necessary for the\n * C bindings, however it's needed for the `listTimezones()` function and for\n * resolving the 'initial' timezone to use.\n */\n\ndebug('attempting to resolve timezone directory.');\nvar possibleTzdirs = [\n    '/usr/share/zoneinfo'\n  , '/usr/lib/zoneinfo'\n  , '/usr/share/lib/zoneinfo'\n];\nvar TZDIR = process.env.TZDIR;\nif (TZDIR) {\n  debug('got env-defined TZDIR:', TZDIR);\n  possibleTzdirs.unshift(TZDIR);\n}\nwhile (possibleTzdirs.length > 0) {\n  var d = possibleTzdirs.shift();\n  debug('checking if directory exists:', d);\n  try {\n    if (fs.statSync(d).isDirectory()) {\n      TZDIR = d;\n      break;\n    }\n  } catch (e) {\n    debug(e);\n  }\n}\npossibleTzdirs = null; // garbage collect\nif (TZDIR) {\n  debug('found timezone directory at:', TZDIR);\n} else {\n  debug('WARN: Could not find timezone directory. listTimezones() won\\'t work');\n}\n\n/**\n * Older versions of node-time would require the user to have the TZ\n * environment variable set, otherwise undesirable results would happen. Now\n * node-time tries to automatically determine the current timezone for you.\n */\n\nif (!exports.currentTimezone) {\n  debug('`process.env.TZ` not initially set, attempting to resolve');\n  try {\n    var currentTimezonePath = fs.readlinkSync('/etc/localtime');\n    if (currentTimezonePath.substring(0, TZDIR.length) === TZDIR) {\n      // Got It!\n      var zone = currentTimezonePath.substring(TZDIR.length + 1);\n      exports.currentTimezone = process.env.TZ = zone;\n      debug('resolved initial timezone:', zone);\n    }\n  } catch (e) {\n    debug(e);\n  }\n}\n\nif (!exports.currentTimezone) {\n  debug('\"currentTimezone\" still not set. Checking \"/etc/timezone\"');\n  try {\n    var zone = fs.readFileSync('/etc/timezone', 'utf8').trim();\n    exports.currentTimezone = process.env.TZ = zone;\n    debug('resolved initial timezone:', zone);\n  } catch (e) {\n    debug(e);\n  }\n}\n\n/**\n * The user-facing 'tzset' function is a thin wrapper around the native binding to\n * 'tzset()'. This function accepts a timezone String to set the process' timezone\n * to. Returns an object with the zoneinfo for the timezone.\n *\n * Throws (on *some* platforms) when the desired timezone could not be loaded.\n *\n * Sets the `currentTimezone` property on the exports.\n */\n\nfunction tzset (tz) {\n  if (tz) {\n    process.env.TZ = tz;\n  }\n  var usedTz = process.env.TZ;\n  var rtn = bindings.tzset();\n  debug('set the current timezone to:', usedTz);\n  if (!rtn.tzname[1] && rtn.timezone === 0) {\n    debug('got bad zoneinfo object:', rtn);\n    var err = new Error(\"Unknown Timezone: '\" + usedTz + \"'\");\n    for (var i in rtn) {\n      err[i] = rtn[i];\n    }\n    throw err;\n  }\n  exports.currentTimezone = usedTz;\n  exports._currentZoneinfo = rtn;\n  return rtn;\n}\nexports.tzset = tzset;\n\n/**\n * Lists the timezones that the current system can accept. It does this by going\n * on a recursive walk through the timezone dir and collecting filenames.\n */\n\nfunction listTimezones () {\n  if (arguments.length == 0) {\n    throw new Error(\"You must set a callback\");\n  }\n  if (typeof arguments[arguments.length - 1] != \"function\") {\n    throw new Error(\"You must set a callback\");\n  }\n  var cb = arguments[arguments.length - 1]\n    , subset = (arguments.length > 1 ? arguments[0] : null)\n\n  return listTimezonesFolder(subset ? subset + \"/\" : \"\", subset ? path.join(TZDIR, \"/\" + subset) : TZDIR, function (err, tzs) {\n    if (err) return cb(err);\n    cb(null, tzs.sort());\n  });\n}\nexports.listTimezones = listTimezones;\n\nfunction listTimezonesFolder(prefix, folder, cb) {\n  var timezones = [];\n\n  fs.readdir(folder, function (err, files) {\n    if (err) return cb(err);\n\n    var pending_stats = files.length;\n\n    for (var i = 0; i < files.length; i++) {\n      if (~TZ_BLACKLIST.indexOf(files[i])\n          || files[i].indexOf(\".\") >= 0\n          || files[i][0].toUpperCase() != files[i][0]) {\n        pending_stats--;\n        continue\n      }\n      fs.stat(path.join(folder, files[i]), (function (file) {\n          return function (err, stats) {\n            if (!err) {\n              if (stats.isDirectory()) {\n                listTimezonesFolder(prefix + file + \"/\", path.join(folder, file), function (err, tzs) {\n                  if (!err) {\n                    timezones = timezones.concat(tzs);\n                  }\n                  pending_stats--;\n                  if (pending_stats == 0) cb(null, timezones);\n                });\n                return;\n              }\n              if (prefix.length > 0) timezones.push(prefix + file);\n            }\n            pending_stats--;\n            if (pending_stats == 0) cb(null, timezones);\n          };\n        })(files[i]));\n    }\n  });\n}\n\n/**\n * The \"setTimezone\" function is the \"entry point\" for a Date instance.\n * It must be called after an instance has been created. After, the 'getSeconds()',\n * 'getHours()', 'getDays()', etc. functions will return values relative\n * to the time zone specified.\n */\n\nfunction setTimezone (timezone, relative) {\n  debug('Date#setTimezone(%s, %s)', timezone, relative);\n\n  // If `true` is passed in as the second argument, then the Date instance\n  // will have it's timezone set, but it's current local values will remain\n  // the same (i.e. the Date's internal time value will be changed)\n  var ms, s, m, h, d, mo, y\n  if (relative) {\n    y  = this.getFullYear()\n    mo = this.getMonth()\n    d  = this.getDate()\n    h  = this.getHours()\n    m  = this.getMinutes()\n    s  = this.getSeconds()\n    ms = this.getMilliseconds()\n  }\n\n  // If the current process timezone doesn't match the desired timezone, then call\n  // tzset() to change the current timezone of the process.\n  var oldTz = exports.currentTimezone\n    , tz = exports._currentZoneinfo;\n  if (!tz || oldTz !== timezone) {\n    debug('current timezone is not \"%s\", calling tzset()', timezone);\n    tz = exports.tzset(timezone);\n  }\n\n  // Get the zoneinfo for this Date instance's time value\n  var zoneInfo = exports.localtime(this.getTime() / 1000);\n\n  // Change the timezone back if we changed it originally\n  if (oldTz != timezone) {\n    debug('setting timezone back to \"%s\"', oldTz);\n    exports.tzset(oldTz);\n  }\n  oldTz = null;\n\n  // If we got to here without throwing an Error, then\n  // a valid timezone was requested, and we should have\n  // a valid zoneInfo Object.\n  this.getTimezone = function getTimezone() {\n    return timezone;\n  }\n\n  // Returns the day of the month (1-31) for the specified date according to local time.\n  this.getDate = function getDate() {\n    return zoneInfo.dayOfMonth;\n  }\n  // Returns the day of the week (0-6) for the specified date according to local time.\n  this.getDay = function getDay() {\n    return zoneInfo.dayOfWeek;\n  }\n  // Deprecated. Returns the year (usually 2-3 digits) in the specified date according\n  // to local time. Use `getFullYear()` instead.\n  this.getYear = function getYear() {\n    return zoneInfo.year;\n  }\n  // Returns the year (4 digits for 4-digit years) of the specified date according to local time.\n  this.getFullYear = function getFullYear() {\n    return zoneInfo.year + 1900;\n  }\n  // Returns the hour (0-23) in the specified date according to local time.\n  this.getHours = function getHours() {\n    return zoneInfo.hours;\n  }\n  // Returns the minutes (0-59) in the specified date according to local time.\n  this.getMinutes = function getMinutes() {\n    return zoneInfo.minutes;\n  }\n  // Returns the month (0-11) in the specified date according to local time.\n  this.getMonth = function getMonth() {\n    return zoneInfo.month;\n  }\n  // Returns the seconds (0-59) in the specified date according to local time.\n  this.getSeconds = function getSeconds() {\n    return zoneInfo.seconds;\n  }\n  // Returns the timezone offset from GMT the Date instance currently is in,\n  // in minutes. Also, left of GMT is positive, right of GMT is negative.\n  this.getTimezoneOffset = function getTimezoneOffset() {\n    return -zoneInfo.gmtOffset / 60;\n  }\n  // NON-STANDARD: Returns the abbreviation (e.g. EST, EDT) for the specified time zone.\n  this.getTimezoneAbbr = function getTimezoneAbbr() {\n    return tz.tzname[zoneInfo.isDaylightSavings ? 1 : 0];\n  }\n\n  // Sets day, month and year at once\n  this.setAllDateFields = function setAllDateFields(y,mo,d) {\n    return this.setFullYear(y,mo,d);\n  }\n  // Sets the day of the month (from 1-31) in the current timezone\n  this.setDate = function setDate(d) {\n    zoneInfo.dayOfMonth = d;\n    return mktime.call(this);\n  }\n  // Sets the year (four digits) in the current timezone\n  this.setFullYear = function setFullYear(y,mo,d) {\n    zoneInfo.year = y - 1900;\n    if(arguments.length > 1)\n      zoneInfo.month = mo;\n    if(arguments.length > 2)\n      zoneInfo.dayOfMonth = d;\n    return mktime.call(this);\n  }\n  // Sets the hour (from 0-23) in the current timezone\n  this.setHours = function setHours(h,m,s,ms) {\n    zoneInfo.hours = h;\n    if(arguments.length > 1)\n      zoneInfo.minutes = m;\n    if(arguments.length > 2)\n      zoneInfo.seconds = s;\n    if(arguments.length > 3) {\n      mktime.call(this);\n      var diff = ms - this.getMilliseconds();\n      return this.setTime(this.getTime() + diff);\n    } else\n      return mktime.call(this);\n  }\n  // Sets the milliseconds (from 0-999) in the current timezone\n  this.setMilliseconds = function setMilliseconds(ms) {\n    var diff = ms - this.getMilliseconds();\n    return this.setTime(this.getTime() + diff);\n  }\n  // Set the minutes (from 0-59) in the current timezone\n  this.setMinutes = function setMinutes(m,s,ms) {\n    zoneInfo.minutes = m;\n    if(arguments.length > 1)\n      zoneInfo.seconds = s;\n    if(arguments.length > 2) {\n      mktime.call(this);\n      var diff = ms - this.getMilliseconds();\n      return this.setTime(this.getTime() + diff);\n    } else\n      return mktime.call(this);\n  }\n  // Sets the month (from 0-11) in the current timezone\n  this.setMonth = function setMonth(mo,d) {\n    zoneInfo.month = mo;\n    if(arguments.length > 1)\n      zoneInfo.dayOfMonth = d;\n    return mktime.call(this);\n  }\n  // Sets the seconds (from 0-59) in the current timezone\n  this.setSeconds = function setSeconds(s,ms) {\n    zoneInfo.seconds = s;\n    if(arguments.length > 1) {\n      mktime.call(this);\n      var diff = ms - this.getMilliseconds();\n      return this.setTime(this.getTime() + diff);\n    } else\n      return mktime.call(this);\n  }\n  // Sets a date and time by adding or subtracting a specified number of\n  // milliseconds to/from midnight January 1, 1970.\n  this.setTime = function setTime(v) {\n    var rtn = _Date.prototype.setTime.call(this, v);\n    // Since this function changes the internal UTC epoch date value, we need to\n    // re-setup these timezone translation functions to reflect the new value\n    reset.call(this);\n    return rtn;\n  }\n  // Sets the day of the month, according to universal time (from 1-31)\n  this.setUTCDate = function setUTCDate(d) {\n    var rtn = _Date.prototype.setUTCDate.call(this, d);\n    reset.call(this);\n    return rtn;\n  }\n  // Sets the year, according to universal time (four digits)\n  this.setUTCFullYear = function setUTCFullYear(y,mo,d) {\n    var rtn;\n    switch(arguments.length) {\n      case 1:\n        rtn = _Date.prototype.setUTCFullYear.call(this, y); break;\n      case 2:\n        rtn = _Date.prototype.setUTCFullYear.call(this, y,mo); break;\n      case 3:\n        rtn = _Date.prototype.setUTCFullYear.call(this, y,mo,d); break;\n    }\n    reset.call(this);\n    return rtn;\n  }\n  // Sets the hour, according to universal time (from 0-23)\n  this.setUTCHours = function setUTCHours(h,m,s,ms) {\n    var rtn;\n    switch(arguments.length) {\n      case 1:\n        rtn = _Date.prototype.setUTCHours.call(this, h); break;\n      case 2:\n        rtn = _Date.prototype.setUTCHours.call(this, h,m); break;\n      case 3:\n        rtn = _Date.prototype.setUTCHours.call(this, h,m,s); break;\n      case 4:\n        rtn = _Date.prototype.setUTCHours.call(this, h,m,s,ms); break;\n    }\n    reset.call(this);\n    return rtn;\n  }\n  // Sets the milliseconds, according to universal time (from 0-999)\n  this.setUTCMilliseconds = function setUTCMillseconds(ms) {\n    var rtn = _Date.prototype.setUTCMilliseconds.call(this, ms);\n    reset.call(this);\n    return rtn;\n  }\n  // Set the minutes, according to universal time (from 0-59)\n  this.setUTCMinutes = function setUTCMinutes(m,s,ms) {\n    var rtn;\n    switch(arguments.length) {\n      case 1:\n        rtn = _Date.prototype.setUTCMinutes.call(this, m); break;\n      case 2:\n        rtn = _Date.prototype.setUTCMinutes.call(this, m,s); break;\n      case 3:\n        rtn = _Date.prototype.setUTCMinutes.call(this, m,s,ms); break;\n    }\n    reset.call(this);\n    return rtn;\n  }\n  // Sets the month, according to universal time (from 0-11)\n  this.setUTCMonth = function setUTCMonth(mo,d) {\n    var rtn;\n    switch(arguments.length) {\n      case 1:\n        rtn = _Date.prototype.setUTCMonth.call(this, mo); break;\n      case 2:\n        rtn = _Date.prototype.setUTCMonth.call(this, mo,d); break;\n    }\n    reset.call(this);\n    return rtn;\n  }\n  // Set the seconds, according to universal time (from 0-59)\n  this.setUTCSeconds = function setUTCSeconds(s,ms) {\n    var rtn;\n    switch(arguments.length) {\n      case 1:\n        rtn = _Date.prototype.setUTCSeconds.call(this, s); break;\n      case 2:\n        rtn = _Date.prototype.setUTCSeconds.call(this, s,ms); break;\n    }\n    reset.call(this);\n    return rtn;\n  }\n\n  this.toDateString = function toDateString() {\n    return DAYS_OF_WEEK[this.getDay()].substring(0, 3) + ' ' + MONTHS[this.getMonth()].substring(0, 3) + ' ' + pad(this.getDate(), 2) + ' ' + this.getFullYear();\n  }\n\n  this.toTimeString = function toTimeString() {\n    var offset = Math.abs(zoneInfo.gmtOffset / 60); // total minutes\n    // split into HHMM:\n    var hours = pad(Math.floor(offset / 60), 2);\n    var minutes = pad(offset % 60, 2);\n    return this.toLocaleTimeString() + ' GMT' + (zoneInfo.gmtOffset >= 0 ? '+' : '-') + hours + minutes\n      + ' (' + tz.tzname[zoneInfo.isDaylightSavings ? 1 : 0] + ')';\n  }\n\n  this.toString = function toString() {\n    return this.toDateString() + ' ' + this.toTimeString();\n  }\n\n  this.toLocaleDateString = function toLocaleDateString() {\n    return DAYS_OF_WEEK[this.getDay()] + ', ' + MONTHS[this.getMonth()] + ' ' + pad(this.getDate(), 2) + ', ' + this.getFullYear();\n  }\n\n  this.toLocaleTimeString = function toLocaleTimeString() {\n    return pad(this.getHours(), 2) + ':' + pad(this.getMinutes(), 2) + ':' + pad(this.getSeconds(), 2);\n  }\n\n  this.toLocaleString = this.toString;\n\n  if (relative) {\n    this.setAllDateFields(y,mo,d)\n    this.setHours(h)\n    this.setMinutes(m)\n    this.setSeconds(s)\n    this.setMilliseconds(ms)\n    ms = s = m = h = d = mo = y = null\n  }\n\n\n  // Used internally by the 'set*' functions above...\n  function reset () {\n    this.setTimezone(this.getTimezone());\n  }\n  // 'mktime' calls 'reset' implicitly through 'setTime()'\n  function mktime () {\n    var oldTz = process.env.TZ;\n    exports.tzset(this.getTimezone());\n    zoneInfo.isDaylightSavings = -1; // Auto-detect the timezone\n    var t = exports.mktime(zoneInfo);\n    if (oldTz) {\n      exports.tzset(oldTz);\n      oldTz = null;\n    }\n    return this.setTime( (t * MILLIS_PER_SECOND) + this.getMilliseconds() );\n  }\n\n  return this;\n}\n\n// Returns a \"String\" of the last value set in \"setTimezone\".\n// TODO: Return something when 'setTimezone' hasn't been called yet.\nfunction getTimezone () {\n  throw new Error('You must call \"setTimezone(tz)\" before \"getTimezone()\" may be called');\n}\n\n// NON-STANDARD: Returns the abbreviated timezone name, also taking daylight\n// savings into consideration. Useful for the presentation layer of a Date\n// instance.\nfunction getTimezoneAbbr () {\n  var str = this.toString().match(/\\([A-Z]+\\)/)[0];\n  return str.substring(1, str.length-1);\n}\n\n// Export the modified 'Date' instance. Users should either use this with the\n// 'new' operator, or extend an already existing Date instance with 'extend()'.\n// An optional, NON-STANDARD, \"timezone\" argument may be appended as the final\n// argument, in order to specify the initial timezone the Date instance should\n// be created with.\nfunction Date (year, month, day, hour, minute, second, millisecond, timezone) {\n  if (!(this instanceof Date)) {\n    return new Date(year, month, day, hour, minute, second, millisecond, timezone).toString();\n  }\n  var argc = arguments.length\n    , d;\n  // So that we don't have to do the switch block below twice!\n  while (argc > 0 && typeof arguments[argc-1] === 'undefined') {\n    argc--;\n  }\n  // An optional 'timezone' argument may be passed as the final argument\n  if (argc >= 2 && typeof arguments[argc - 1] === 'string') {\n    timezone = arguments[argc - 1];\n    argc--;\n  }\n  // Ugly, but the native Date constructor depends on arguments.length in order\n  // to create a Date instance in the intended fashion.\n  switch (argc) {\n    case 0:\n      d = new _Date(); break;\n    case 1:\n      d = new _Date(year); break;\n    case 2:\n      d = new _Date(year, month); break;\n    case 3:\n      d = new _Date(year, month, day); break;\n    case 4:\n      d = new _Date(year, month, day, hour); break;\n    case 5:\n      d = new _Date(year, month, day, hour, minute); break;\n    case 6:\n      d = new _Date(year, month, day, hour, minute, second); break;\n    case 7:\n      d = new _Date(year, month, day, hour, minute, second, millisecond); break;\n  }\n  if (timezone) {\n    // set time given timezone relative to the currently set local time\n    // (changing the internal \"time\" milliseconds value unless ms specified)\n    d.setTimezone(timezone, !(argc == 1 && typeof year === 'number'));\n  } else {\n    d.setTimezone(exports.currentTimezone);\n  }\n  return d;\n}\nDate.prototype = _Date.prototype;\nexports.Date = Date;\n\n\n// We also overwrite `Date.parse()`. It can accept an optional 'timezone'\n// second argument.\nfunction parse (dateStr, timezone) {\n  return new Date(dateStr, timezone).getTime();\n}\nexports.parse = parse;\n\n// 'now()', 'parse()', and 'UTC()' all need to be re-defined on Date as don't enum\nObject.defineProperty(Date, 'now', { value: _Date.now, writable: true, enumerable: false });\nObject.defineProperty(Date, 'parse', { value: parse, writable: true, enumerable: false });\nObject.defineProperty(Date, 'UTC', { value: _Date.UTC, writable: true, enumerable: false });\n\n\n\n// Turns a \"regular\" Date instance into one of our \"extended\" Date instances.\n// The return value is negligible, as the original Date instance is modified.\n// DEPRECATED: Just extend the Date's prototype using the Date-extend function.\nexports.extend = function extend (date) {\n  if (!date) return date;\n  date.getTimezone = getTimezone;\n  date.setTimezone = setTimezone;\n  date.getTimezoneAbbr = getTimezoneAbbr;\n  return date;\n}\n\n\n/**\n * Pads a number with 0s if required.\n */\n\nfunction pad (num, padLen) {\n  var padding = '0000';\n  num = String(num);\n  return padding.substring(0, padLen - num.length) + num;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","module.exports = require(\"tty\");","module.exports = require(\"util\");","module.exports = require(\"net\");","\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = ((fs.accessSync && function (path) { try { fs.accessSync(path); } catch (e) { return false; } return true; })\n      || fs.existsSync || path.existsSync)\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n","module.exports = require(\"vm\");"],"sourceRoot":""}